import java.util.*;

class Solution {
    public int solution(String[] friends, String[] gifts) {
        int length = friends.length;

        //받을 선물 개수 리스트
        int tScore[] = new int[length];

        //2차원 배열 저장 후 [x][y] [y][x] 대소 비교 -> tScore에 증가연산
        int compare[][] = new int[length+1][length+1];

        for(int i = 0; i < gifts.length; i++){
            String[] temp = gifts[i].split(" ");
            int x = 0;
            int y = 0;

            x = Arrays.asList(friends).indexOf(temp[0]);
            compare[x+1][0]++;

            y = Arrays.asList(friends).indexOf(temp[1]);
            compare[0][y+1]++;

            compare[x+1][y+1]++;
        }

        //선물지수 = 준 선물 - 받은 선물 (준 선물이 더 많으면 선물지수 높음)
        int pScore[] = new int[length];

        for(int i = 0; i < length; i++){
            pScore[i] = compare[i+1][0] - compare[0][i+1];
        }

        //받을 선물 계산 - compare 탐색하면서 비교 (선물지수 이용)
        for(int i = 1; i <= length; i++){
            for(int j = i + 1; j < length+1; j++){
                if(compare[i][j] > compare[j][i]){
                    tScore[i-1]++;
                }
                else if(compare[i][j] < compare[j][i]){
                    tScore[j-1]++;
                }
                else if(compare[i][j] == compare[j][i]){
                    if(pScore[i-1] > pScore[j-1]){
                        tScore[i-1]++;
                    }
                    else if(pScore[i-1] < pScore[j-1]){
                        tScore[j-1]++;
                    }
                }
            }
        }

        //카운트
        int max = 0;
        String max_Name = "";

        int maxNum = 0;
        for(int i : tScore){
            if(i > max) max_Name = friends[maxNum];
            max = Math.max(max, i);
            maxNum++;
        }

        System.out.println(max_Name);
        return max;
    }
}

